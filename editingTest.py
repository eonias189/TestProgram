# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'editingTest.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys

from PyQt5.QtWidgets import QApplication, QWidget, QFileDialog
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(570, 450)
        self.nv = QtWidgets.QLabel(Form)
        self.nv.setGeometry(QtCore.QRect(210, 10, 161, 51))
        self.nv.setObjectName("nv")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(10, 80, 111, 31))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(30, 120, 91, 31))
        self.label_3.setObjectName("label_3")
        self.next = QtWidgets.QPushButton(Form)
        self.next.setGeometry(QtCore.QRect(370, 390, 181, 41))
        self.next.setObjectName("next")
        self.title = QtWidgets.QLineEdit(Form)
        self.title.setGeometry(QtCore.QRect(130, 80, 431, 31))
        self.title.setObjectName("title")
        self.ansType = QtWidgets.QComboBox(Form)
        self.ansType.setGeometry(QtCore.QRect(130, 120, 431, 31))
        self.ansType.setObjectName("ansType")
        self.ansType.addItem("")
        self.ansType.addItem("")
        self.ansType.addItem("")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(40, 160, 81, 21))
        self.label_4.setObjectName("label_4")
        self.vars = QtWidgets.QTextEdit(Form)
        self.vars.setGeometry(QtCore.QRect(130, 160, 431, 81))
        self.vars.setObjectName("vars")
        self.label_5 = QtWidgets.QLabel(Form)
        self.label_5.setGeometry(QtCore.QRect(10, 250, 211, 31))
        self.label_5.setObjectName("label_5")
        self.ans = QtWidgets.QLineEdit(Form)
        self.ans.setGeometry(QtCore.QRect(220, 250, 341, 31))
        self.ans.setObjectName("ans")
        self.loadImage = QtWidgets.QPushButton(Form)
        self.loadImage.setGeometry(QtCore.QRect(20, 350, 141, 31))
        self.loadImage.setObjectName("loadImage")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(170, 290, 41, 31))
        self.label.setObjectName("label")
        self.point = QtWidgets.QLineEdit(Form)
        self.point.setGeometry(QtCore.QRect(220, 290, 341, 31))
        self.point.setObjectName("point")
        self.deleteImage = QtWidgets.QPushButton(Form)
        self.deleteImage.setGeometry(QtCore.QRect(170, 350, 141, 31))
        self.deleteImage.setObjectName("deleteImage")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Редактирование"))
        self.nv.setText(_translate("Form", "Вопрос № "))
        self.label_2.setText(_translate("Form", "Текст вопроса"))
        self.label_3.setText(_translate("Form", "Тип ответа"))
        self.next.setText(_translate("Form", "Следующий вопрос"))
        self.ansType.setItemText(0, _translate("Form", "Ввод ответа"))
        self.ansType.setItemText(1, _translate("Form", "Один из нескольких вариантов"))
        self.ansType.setItemText(2, _translate("Form", "Несколько вариантов"))
        self.label_4.setText(_translate("Form", "Варианты"))
        self.label_5.setText(_translate("Form", "Ответ(Номер(а) вариантов ответов)"))
        self.loadImage.setText(_translate("Form", "загрузить картинку"))
        self.label.setText(_translate("Form", "Балл"))
        self.deleteImage.setText(_translate("Form", "убрать картинку"))


class EdititngQuestion(QWidget, Ui_Form):
    def __init__(self, func):
        super().__init__()
        self.setupUi(self)
        self.func = func
        self.vars.setDisabled(True)
        self.picture = None
        self.canBeClosed = False
        self.setFixedSize(self.size())
        self.ansType.currentTextChanged.connect(self.ansTypeChanged)
        self.loadImage.clicked.connect(self.im)
        self.deleteImage.clicked.connect(self.delIm)

    def closeEvent(self, event):
        if self.func and not self.canBeClosed:
            self.func()

    def im(self):
        fname, ok_pressed = QFileDialog.getOpenFileName(
            self, 'Выбрать картинку', '',
            'Картинка (*.jpg);;Картинка (*.png);;Все файлы (*)')
        if ok_pressed:
            self.picture = fname
            self.loadImage.setText(fname.split('/')[-1])

    def delIm(self):
        self.picture = None
        self.loadImage.setText('загрузить картинку')

    def ansTypeChanged(self):
        if self.ansType.currentText() == 'Ввод ответа':
            self.vars.setPlainText('')
            self.vars.setDisabled(True)
        else:
            self.vars.setDisabled(False)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = EdititngQuestion(None)
    ex.show()
    sys.exit(app.exec_())
